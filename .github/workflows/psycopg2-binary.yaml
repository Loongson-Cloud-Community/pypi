name: build psycopg2-binary wheel

on:
  schedule:
    - cron: '0 17 * * *'
  pull_request:
    branches: ["main"]
  push:
    branches: ["main"]
  workflow_dispatch:
    inputs:
      version:
        required: false
        default: 'latest'

env:
  PACKAGE: psycopg2_binary
  REPOSITORY: psycopg/psycopg2

jobs:
  build:
    name: Build psycopg2-binary ${{ matrix.pyver }} ${{ matrix.platform }} wheel on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [loongarch64-abi2.0]
        platform: [manylinux, musllinux]
        pyver: [cp39, cp310, cp311, cp312, cp313]
    steps:
      - name: Check if exists
        run: |
          pkg=${{ env.PACKAGE }}
          if [[ "${{ github.event_name }}" == "schedule" ]]; then
            version="latest"
          else
            version="${{ github.event.inputs.version }}"
          fi
          platform="${{ matrix.platform }}"
          url="https://lpypi.loongnix.cn/loongson/pypi/+simple/${pkg}/"
          upstream_url="https://api.github.com/repos/${{ env.REPOSITORY }}/tags"
          if [[ "${version}" == "latest" ]]; then
            version="$(curl -s ${upstream_url} | jq -r '.[0].name')"
          fi
          if curl -Ls ${url} | grep -q ${pkg}-${version}-.*${{ matrix.pyver }}-${platform}.*loongarch64; then
            echo "SKIP=true" >> $GITHUB_ENV
          else
            echo "SKIP=false" >> $GITHUB_ENV
          fi
          echo "VERSION=${version}" >> $GITHUB_ENV

      - name: Clean workspace
        if: ${{ env.SKIP != 'true' }}
        run: safe-rm -rf * .*

      - name: Download source
        if: ${{ env.SKIP != 'true' }}
        uses: actions/checkout@v4
        with:
          repository: ${{ env.REPOSITORY }}
          ref: ${{ env.VERSION }}

      - name: Build wheel
        if: ${{ env.SKIP != 'true' }}
        run: |
          pip3 install cibuildwheel==2.22.0
          cibuildwheel
        env:
          PIP_INDEX_URL: "https://lpypi.loongnix.cn/loongson/pypi/+simple"
          CIBW_ARCHS: "loongarch64"
          CIBW_BUILD: "${{ matrix.pyver }}-${{ matrix.platform }}_loongarch64"
          CIBW_TEST_SKIP: "*"
          CIBW_ENVIRONMENT_PASS_LINUX: LIBPQ_VERSION OPENSSL_VERSION PIP_INDEX_URL
          CIBW_ENVIRONMENT: |
            PACKAGE_NAME=psycopg2-binary
            LIBPQ_BUILD_PREFIX=/host/tmp/libpq.build-${{ matrix.platform }}-17.6
            PATH="$LIBPQ_BUILD_PREFIX/bin:$PATH"
            LD_LIBRARY_PATH="$LIBPQ_BUILD_PREFIX/lib:$LIBPQ_BUILD_PREFIX/lib64"
            HTTPS_PROXY=${{ secrets.PROXY_URL }}

      - name: Upload wheels to artifact
        if: ${{ env.SKIP != 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.pyver }}-${{ matrix.platform }}
          path: wheelhouse/*

  upload:
    name: Upload wheels to PyPI
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Download wheels from artifact
        uses: actions/download-artifact@v4
        with:
          name: wheels-cp39-manylinux  # 这里可以循环或者按需要下载所有 matrix artifact
          path: ./wheelhouse

      - name: Upload wheels
        run: |
          pip3 install twine==6.1.0
          twine upload --repository-url https://lpypi.loongnix.cn/loongson/pypi wheelhouse/*
        env:
          TWINE_USERNAME: ${{ secrets.INDEX_NAME }}
          TWINE_PASSWORD: ${{ secrets.INDEX_TOKEN }}
